set.seed(17076749)
# create a list of districts
districts <- list("Northern_Ireland.txt", "Scotland_N.txt",
"Scotland_E.txt", "Scotland_W.txt",
"England_E_and_NE.txt", "England_NW_and_N_Wales.txt",
"Midlands.txt", "East_Anglia.txt",
"England_SW_and_S_Wales.txt", "England_SE_and_Central_S.txt")
# create 3 different URLS (max, mean, min) for the districts
urlMAX = paste("https://www.metoffice.gov.uk/pub/data/weather/uk/climate/datasets/Tmax/date/",districts[], sep = "")
urlMEAN = paste("https://www.metoffice.gov.uk/pub/data/weather/uk/climate/datasets/Tmean/date/",districts[], sep = "")
urlMIN = paste("https://www.metoffice.gov.uk/pub/data/weather/uk/climate/datasets/Tmin/date/",districts[], sep = "")
# make a function to pass through url x
getMAX <- function(x) {
#print(search_url[x])
fread(urlMAX[x], fill = TRUE)
}
getMEAN <- function(x) {
#print(search_url[x])
fread(urlMEAN[x], fill = TRUE)
}
getMIN <- function(x) {
#print(search_url[x])
fread(urlMIN[x], fill = TRUE)
}
myData <- getMAX(1)
# only take cols 2-13
myData <- myData[,1:13]
head(myData)
# remove rows 1-5
myData <- myData[6:143]
head(myData)
# get the months from dataset
months <- myData[1,1:12]
# check to make sure we got them
head(months)
# change to char
months <- as.character(months)
is.character(months)
# Now we have the months, lets delete them from the dataset
myData <- myData[-1,1:12]
# make sure it worked
head(myData)
# now to set the names
colnames(myData) <- months
# make sure it worked again
head(myData)
# convert to vector
myData %>% t() %>% as.vector()
is.vector(myData)
# TREND
tempD <- ts(myData, start = 1884, frequency = 12)
tempD %>% ts(start = 1879, frequency = 12) -> tempD
tempD %>% ts.plot()
# TREND
tempD <- ts(myData, start = 1884, frequency = 1/12)
tempD %>% ts(start = 1879, frequency = 12) -> tempD
tempD %>% ts.plot()
View(globaltemps)
# TREND
tempD <- ts(myData, start = 1884, frequency = 1/12)
tempD %>% ts(start = 1884, frequency = 12) -> tempD
tempD %>% ts.plot()
tempD %>% ts(start = 1884, frequency = 1/12) -> tempD
tempD %>% ts.plot()
tempD %>% ts(start = 1884, frequency = 12) -> tempD
tempD %>% ts.plot()
tempD %>% ts(start = 1884, frequency = 137) -> tempD
tempD %>% ts.plot()
# TREND
tempD <- ts(myData, start = 1884, frequency = 1/12)
tempD %>% ts.plot()
tempD %>% ts(start = 1884, frequency = 12) -> tempD
tempD %>% ts.plot()
View(globaltemps)
# only take cols 2-13
myData <- myData[,1:13]
myData <- getMAX(1)
# only take cols 2-13
myData <- myData[,1:13]
head(myData)
# remove rows 1-5
myData <- myData[6:143]
head(myData)
# get the months from dataset
months <- myData[1,1:12]
# check to make sure we got them
head(months)
# get the months from dataset
months <- myData[1,1:13]
# check to make sure we got them
head(months)
# change to char
months <- as.character(months)
is.character(months)
# Now we have the months, lets delete them from the dataset
myData <- myData[-1,1:12]
# make sure it worked
head(myData)
# Now we have the months, lets delete them from the dataset
myData <- myData[-1,1:13]
myData <- getMAX(1)
# only take cols 2-13
myData <- myData[,1:13]
head(myData)
# remove rows 1-5
myData <- myData[6:143]
head(myData)
# get the months from dataset
months <- myData[1,1:13]
# check to make sure we got them
head(months)
# change to char
months <- as.character(months)
is.character(months)
# Now we have the months, lets delete them from the dataset
myData <- myData[-1,1:13]
# make sure it worked
head(myData)
# now to set the names
colnames(myData) <- months
# make sure it worked again
head(myData)
# convert to vector
myData %>% t() %>% as.vector()
myData <- getMAX(1)
# only take cols 2-13
myData <- myData[,1:13]
head(myData)
# only take cols 2-13
myData <- myData[,2:13]
myData <- getMAX(1)
# only take cols 2-13
myData <- myData[,2:13]
head(myData)
myData <- getMAX(1)
# save just the first row for the years
myYears <- myData[1,:]
# save just the first row for the years
myYears <- myData[,1]
myYears
# save just the first row for the years
myYears <- myData[6,1]
myYears
# save just the first row for the years
myYears <- myData[6:,1]
View(myYears)
myData <- getMAX(1)
View(myData)
# save just the first row for the years
myYears <- myData[6:143,1]
myYears
myData <- getMAX(1)
# save just the first row for the years
myYears <- myData[6:143,2]
myYears
myData <- getMAX(1)
# save just the first row for the years
myYears <- myData[6:143,1]
myYears
myData <- getMAX(1)
# save just the first row for the years
myYears <- myData[7:143,1]
myYears
colnames(myYears) <- 'Year'
myYears
# start at 2 to remove the year
myData <- myData[,2:13]
head(myData)
# remove rows 1-5
myData <- myData[6:143]
head(myData)
# get the months from dataset
months <- myData[1,1:13]
# get the months from dataset
months <- myData[1,1:12]
# check to make sure we got them
head(months)
# check to make sure we got them
head(months)
# change to char
months <- as.character(months)
is.character(months)
# Now we have the months, lets delete them from the dataset
myData <- myData[-1,1:13]
# Now we have the months, lets delete them from the dataset
myData <- myData[-1,1:12]
# make sure it worked
head(myData)
# get the months from dataset
months <- myData[1,1:12]
# check to make sure we got them
head(months)
# change to char
months <- as.character(months)
# is.character(months)
# create a list of districts
districts <- list("Northern_Ireland.txt", "Scotland_N.txt",
"Scotland_E.txt", "Scotland_W.txt",
"England_E_and_NE.txt", "England_NW_and_N_Wales.txt",
"Midlands.txt", "East_Anglia.txt",
"England_SW_and_S_Wales.txt", "England_SE_and_Central_S.txt")
# create 3 different URLS (max, mean, min) for the districts
urlMAX = paste("https://www.metoffice.gov.uk/pub/data/weather/uk/climate/datasets/Tmax/date/",districts[], sep = "")
urlMEAN = paste("https://www.metoffice.gov.uk/pub/data/weather/uk/climate/datasets/Tmean/date/",districts[], sep = "")
urlMIN = paste("https://www.metoffice.gov.uk/pub/data/weather/uk/climate/datasets/Tmin/date/",districts[], sep = "")
# make a function to pass through url x
getMAX <- function(x) {
#print(search_url[x])
fread(urlMAX[x], fill = TRUE)
}
getMEAN <- function(x) {
#print(search_url[x])
fread(urlMEAN[x], fill = TRUE)
}
getMIN <- function(x) {
#print(search_url[x])
fread(urlMIN[x], fill = TRUE)
}
myData <- getMAX(1)
# save just the first row for the years
myYears <- myData[7:143,1]
colnames(myYears) <- 'Year'
# start at 2 to remove the year
myData <- myData[,2:13]
head(myData)
# remove rows 1-5
myData <- myData[6:143]
head(myData)
# get the months from dataset
months <- myData[1,1:12]
# check to make sure we got them
head(months)
# change to char
months <- as.character(months)
# is.character(months)
head(months)
months
myData
# make sure it worked
head(myData)
# Now we have the months, lets delete them from the dataset
myData <- myData[-1,1:12]
# make sure it worked
head(myData)
# now to set the names
colnames(myData) <- months
# make sure it worked again
head(myData)
# convert to vector
myData %>% t() %>% as.vector()
is.vector(myData)
# TREND
tempD <- ts(myData, start = 1884, frequency = 1/12)
tempD %>% ts(start = 1879, frequency = 12) -> tempD
tempD %>% ts.plot()
library(magrittr)
library(knitr)
library(data.table)
# set the seed
set.seed(17076749)
# create a list of districts
districts <- list("Northern_Ireland.txt", "Scotland_N.txt",
"Scotland_E.txt", "Scotland_W.txt",
"England_E_and_NE.txt", "England_NW_and_N_Wales.txt",
"Midlands.txt", "East_Anglia.txt",
"England_SW_and_S_Wales.txt", "England_SE_and_Central_S.txt")
# create 3 different URLS (max, mean, min) for the districts
urlMAX = paste("https://www.metoffice.gov.uk/pub/data/weather/uk/climate/datasets/Tmax/date/",districts[], sep = "")
urlMEAN = paste("https://www.metoffice.gov.uk/pub/data/weather/uk/climate/datasets/Tmean/date/",districts[], sep = "")
urlMIN = paste("https://www.metoffice.gov.uk/pub/data/weather/uk/climate/datasets/Tmin/date/",districts[], sep = "")
# make a function to pass through url x
getMAX <- function(x) {
#print(search_url[x])
fread(urlMAX[x], fill = TRUE)
}
getMEAN <- function(x) {
#print(search_url[x])
fread(urlMEAN[x], fill = TRUE)
}
getMIN <- function(x) {
#print(search_url[x])
fread(urlMIN[x], fill = TRUE)
}
# Get one url
address <- "https://www.metoffice.gov.uk/pub/data/weather/uk/climate/datasets/Tmax/date/Northern_Ireland.txt"
nrow <- 2020-1884+1
# read,table
read.table(address, skip = 5, header = TRUE, nrows = nrow)
# read,table
data <- read.table(address, skip = 5, header = TRUE, nrows = nrow)
View(data)
View(data)
# instead of slicing, we need to
subset(data, select = 2:13)
# instead of slicing, we need to
data <- subset(data, select = 2:13)
View(data)
matrix(1:9, ncol = 3, nrow = 3)
as.vector(matrix(1:9, ncol = 3, nrow = 3))
138 * 12
View(data)
# transpose
data <- t()
# as vector
data <- as.vector(data)
# Convert the above into a function
library(magrittr)
# create a list of districts
districts <- list("Northern_Ireland.txt", "Scotland_N.txt",
"Scotland_E.txt", "Scotland_W.txt",
"England_E_and_NE.txt", "England_NW_and_N_Wales.txt",
"Midlands.txt", "East_Anglia.txt",
"England_SW_and_S_Wales.txt", "England_SE_and_Central_S.txt")
# Get one url
address <- "https://www.metoffice.gov.uk/pub/data/weather/uk/climate/datasets/Tmax/date/"
# create a list of districts
districts <- list("Northern_Ireland.txt", "Scotland_N.txt",
"Scotland_E.txt", "Scotland_W.txt",
"England_E_and_NE.txt", "England_NW_and_N_Wales.txt",
"Midlands.txt", "East_Anglia.txt",
"England_SW_and_S_Wales.txt", "England_SE_and_Central_S.txt")
features <- c("Tmax", "Tmean", "Tmin")
# create a list of districts
districts <- list("Northern_Ireland.txt", "Scotland_N.txt",
"Scotland_E.txt", "Scotland_W.txt",
"England_E_and_NE.txt", "England_NW_and_N_Wales.txt",
"Midlands.txt", "East_Anglia.txt",
"England_SW_and_S_Wales.txt", "England_SE_and_Central_S.txt")
source('~/.active-rstudio-document')
# this is bad
hecker <- for(i in 1:3){
for(j in 1:10){
create.ts(features[i], districts[j])
}
}
create.ts <- function(feature, district){
c(address, features, "/date/", district, ".txt") %>%
paste(address, district, sep = "") %>%
read.table(address, skip = 5, header = TRUE, nrows = nrow) %>%
subset(select = 2:13) %>%
t() %>%
as.vector()
}
# this is bad
hecker <- for(i in 1:3){
for(j in 1:10){
create.ts(features[i], districts[j])
}
}
# Notes with Filippo Meeting
# Get one url
address <-
"https://www.metoffice.gov.uk/pub/data/weather/uk/climate/datasets/Tmax/date/"
features <- c("Tmax", "Tmean", "Tmin")
# create a list of districts
districts <- list("Northern_Ireland.txt", "Scotland_N.txt",
"Scotland_E.txt", "Scotland_W.txt",
"England_E_and_NE.txt", "England_NW_and_N_Wales.txt",
"Midlands.txt", "East_Anglia.txt",
"England_SW_and_S_Wales.txt", "England_SE_and_Central_S.txt")
# how many rows
nrow <- 2020-1884+1
# read,table
data <- read.table(address, skip = 5, header = TRUE, nrows = nrow)
# instead of slicing, we need to
data <- subset(data, select = 2:13)
library(magrittr)
# TimeSeries function
create.ts <- function(feature, district){
c(address, features, "/date/", district, ".txt") %>%
paste(address, district, sep = "") %>%
read.table(address, skip = 5, header = TRUE, nrows = nrow) %>%
subset(select = 2:13) %>%
t() %>%
as.vector()
}
# this is bad
for(i in 1:3){
for(j in 1:10){
create.ts(features[i], districts[j])
}
}
# this is bad
for(i in 1:3){
for(j in 1:10){
create.ts(features[i], districts[j])
}
}
# this is bad
for(i in 1:3){
for(j in 1:10){
create.ts(features[i], districts[j])
}
}
# Time Series function
create.ts <- function(feature, district){
c(address, features, "/date/", district, ".txt") %>%
paste(address, district, sep = "") %>%
read.table(address, skip = 5, header = TRUE, nrows = nrow) %>%
subset(select = 2:13) %>%
t() %>%
as.vector()
}
# this is bad
for(i in 1:3){
for(j in 1:10){
create.ts(features[i], districts[j])
}
}
View(create.ts)
# paste(c(address, "Tmax", "/date/"), districts[1], collapse = "")
Tmax.data <-
lapply(districts, create.ts, feature = "Tmax") %>%
set_names(districts)
# Time Series function
create.ts <- function(feature, district){
c(address, features, "/date/", district, ".txt") %>%
paste(collapse = "") %>%
read.table(address, skip = 5, header = TRUE, nrows = nrow) %>%
subset(select = 2:13) %>%
t() %>%
as.vector()
}
# paste(c(address, "Tmax", "/date/"), districts[1], collapse = "")
Tmax.data <-
lapply(districts, create.ts, feature = "Tmax") %>%
set_names(districts)
read.table()
create.ts("Tmax", "Northern_Ireland")
# Notes with Filippo Meeting
# Get one url
address <- "https://www.metoffice.gov.uk/pub/data/weather/uk/climate/datasets/"
features <- c("Tmax", "Tmean", "Tmin")
# create a list of districts
districts <- list("Northern_Ireland.txt", "Scotland_N.txt",
"Scotland_E.txt", "Scotland_W.txt",
"England_E_and_NE.txt", "England_NW_and_N_Wales.txt",
"Midlands.txt", "East_Anglia.txt",
"England_SW_and_S_Wales.txt", "England_SE_and_Central_S.txt")
# Time Series function
create.ts <- function(feature, district){
c(address, features, "/date/", district, ".txt") %>%
paste(collapse = "") %>%
read.table(address, skip = 5, header = TRUE, nrows = nrow) %>%
subset(select = 2:13) %>%
t() %>%
as.vector()
}
create.ts("Tmax", "Northern_Ireland")
create.ts("Tmax", "Northern_Ireland")
address
paste(c(address, features, "/date/", district, ".txt"))
paste(c(address, features, "/date/", districts, ".txt"))
# Notes with Filippo Meeting
# Get one url
address <- "https://www.metoffice.gov.uk/pub/data/weather/uk/climate/datasets/"
# set address
address <- "https://www.metoffice.gov.uk/pub/data/weather/uk/climate/datasets/"
# set features
features <- c("Tmax", "Tmean", "Tmin")
# create a list of districts
districts <- list("Northern_Ireland",
"Scotland_N",
"Scotland_E",
"Scotland_W",
"England_E_and_NE",
"England_NW_and_N_Wales",
"Midlands",
"East_Anglia",
"England_SW_and_S_Wales",
"England_SE_and_Central_S")
paste(c(address, features, "/date/", districts, ".txt"))
# Time Series function
create.ts <- function(feature, district){
c(address, features, "/date/", districts, ".txt") %>%
paste(collapse = "") %>%
read.table(address, skip = 5, header = TRUE, nrows = nrow) %>%
subset(select = 2:13) %>%
t() %>%
as.vector()
}
create.ts("Tmax", "Northern_Ireland")
# Time Series function
create.ts <- function(feature, district){
c(address, feature, "/date/", district, ".txt") %>%
paste(collapse = "") %>%
read.table(address, skip = 5, header = TRUE, nrows = nrow) %>%
subset(select = 2:13) %>%
t() %>%
as.vector()
}
create.ts("Tmax", "Northern_Ireland")
# Time Series function
create.ts <- function(feature, district){
c(address, feature, "/date/", district, ".txt") %>%
paste(collapse = "") %>%
read.table(skip = 5, header = TRUE, nrows = nrow) %>%
subset(select = 2:13) %>%
t() %>%
as.vector() %>%
ts(start = c(1884, 1),frequency = 12)
}
create.ts("Tmax", "Northern_Ireland")
# try to do this with lapply to get 10 Tmax
Tmax.data <-
lapply(districts, create.ts, feature = "Tmax") %>%
set_names(districts)
View(Tmax.data)
library(data.table)
library(magrittr)
# set the seed
set.seed(17076749)
