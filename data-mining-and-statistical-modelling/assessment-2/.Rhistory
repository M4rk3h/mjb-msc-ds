month.abb[time(x)]
}
lapply(Data$Tmax, getMonth)
# calculate months
maxMonths <- month.abb[time(Data$Tmax)]
maxMonths
data <- ts(round(rnorm(60), 2), frequency = 12, end = c(2016, 12))
data_min_value <- data[which.min(data)]
data_min_value
data_min_value_time <- time(data)[which.min(data)]
data_min_value_time
data_min_value_year <- floor(time(data)[which.min(data)])
data_min_value_year
data_min_value_month <- (time(data)[which.min(data)] %% 1)*12
data_min_value_month
data_min_value_month_abb <- month.abb[(time(data)[which.min(data)] %% 1)*12+1]
data_min_value_month_abb
data <- ts(round(rnorm(60), 2), frequency = 12, end = c(2016, 12))
source('~/GitHub/mjb-msc-ds/data-mining-and-statistical-modelling/assessment-2/meeting-notes.R', echo=TRUE)
data_min_value <- data[which.min(data)]
data_min_value
extrema_dates <- function(ts){
ts_min_date <- numyear2monthyear(time(ts)[which.min(ts)])
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
list(min=min(ts),
min_year=ts_min_date[1],
min_month=ts_min_date[2],
max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2])
}
extrema_dates(Data)
# num to month
numyear2monthyear <- function(x){
c(trunc(x),                   # entire part = year
round((x-floor(x))*12 + 1)) # decimal part * 12 + 1 (Jan=0) = Month
}
# try numyearmonth on Data$Tmax
numyear2monthyear(Data$Tmax)
# try numyearmonth on Data$Tmax
numyear2monthyear(Data$Tmax$Northern_Ireland)
extrema_dates(Data$Tmax$Northern_Ireland)
extrema_dates(Data$Tmax$Northern_Ireland)
# find the index
maxIndex <- Data$Tmax %>%
unlist() %>%
as.vector() %>%
which.max()
maxIndex
subIndex
maxVal
# find year
maxYear <- floor(time(Data$Tmax))[which.max(Data$Tmax)]
# find the index
maxIndex <- Data$Tmax %>%
unlist() %>%
as.vector() %>%
which.max()
# unlist Tmax
DTmUn <- Data$Tmax %>%
unlist() %>%
as.vector()
# find the index
maxIndex <- Data$Tmax %>%
unlist() %>%
as.vector() %>%
which.max()
# find sub position
subIndex <- round((maxIndex/16440)*10) # 8 - This could be district
# find max value
maxVal <- Data$Tmax %>% which.max(Data$Tmax)
# find max value
maxVal <- DTmUn %>% which.max(DTmUn)
# unlist Tmax
DTmUn <- Data$Tmax %>%
unlist() %>%
as.vector()
# find the index
maxIndex <- Data$Tmax %>%
unlist() %>%
as.vector() %>%
which.max()
# find sub position
subIndex <- round((maxIndex/16440)*10) # 8 - This could be district
# find max value
maxVal <- DTmUn %>% which.max(DTmUn)
# find sub position
subIndex <- round((maxIndex/16440)*10) # 8 - This could be district
# unlist Tmax
DTmUn <- Data$Tmax %>%
unlist() %>%
as.vector()
# find the index
maxIndex <- Data$Tmax %>%
unlist() %>%
as.vector() %>%
which.max()
# find sub position
subIndex <- round((maxIndex/16440)*10) # 8 - This could be district
# find max value
maxVal <- DTmUn %>% which.max(DTmUn)
# find max value
maxVal <- DTmUn %>% which.max()
maxVal
# find year
maxYear <- floor(time(DTmUn))[which.max(DTmUn)]
maxYear
# month
maxMonth <- month.abb[(time(DTmUn))[which.max(DTmUn)]] %>% 1)*12+1
# month
maxMonth <- month.abb[(time(DTmUn))[which.max(DTmUn)] %>% 1)*12+1]
# month
maxMonth <- month.abb[(time(DTmUn)[which.max(DTmUn)] %>% 1)*12+1]
# month
maxMonth <- month.abb[(time(Data$Tmax)[which.max(Data$Tmax)] %>% 1)*12+1]
# calculate regions
maxRegions <- names(Data$Tmax)
maxRegions
dTmax <- Data$Tmax %>%
unlist() %>%
as.vector() %>%
which.max()
dTmax
# what position does this correspond to in the sublist
sub_position <-
round((position/16440)*10)
# what position is the max value in the nested list
sublist %>%
unlist() %>%
as.vector() %>%
which.max() -> position
highest_temp <- function(list, sublist){
# what position is the max value in the nested list
sublist %>%
unlist() %>%
as.vector() %>%
which.max() -> position
# what position does this correspond to in the sublist
sub_position <- round((position/16440)*10)
# find the value, year, month then region
# VAL
max_val <-
sublist[[sub_position]][which.max(sublist[[sub_position]])]
# YEAR
max_year <-
floor(time(sublist[[sub_position]]))[which.max(sublist[[sub_position]])]
# MONTH
month <-
month.abb[(time(sublist[[sub_position]])[which.max(sublist[[sub_position]])] %>% 1)*12+1]
# REGION
region <- names(sublist[sub_position])
# PRINT
paste('max temp is', max_val, 'during', month, max_year, 'in', region, sep = " ") %>% print()
}
highest_temp(Data, tmax)
highest_temp(Data, Data$Tmax)
highest_temp(Data, "Tmax")
highest_temp(Data)
highest_temp <- function(sublist){
# what position is the max value in the nested list
sublist %>%
unlist() %>%
as.vector() %>%
which.max() -> position
# what position does this correspond to in the sublist
sub_position <- round((position/16440)*10)
# find the value, year, month then region
# VAL
max_val <-
sublist[[sub_position]][which.max(sublist[[sub_position]])]
# YEAR
max_year <-
floor(time(sublist[[sub_position]]))[which.max(sublist[[sub_position]])]
# MONTH
month <-
month.abb[(time(sublist[[sub_position]])[which.max(sublist[[sub_position]])] %>% 1)*12+1]
# REGION
region <- names(sublist[sub_position])
# PRINT
paste('max temp is', max_val, 'during', month, max_year, 'in', region, sep = " ") %>% print()
}
highest_temp(Data)
extrema_dates(Data$Tmax$Northern_Ireland)
extrema_dates(Data$Tmax)
# try test function on Data$Tmax
numyear2monthyear(Data$Tmax$Northern_Ireland)
numyear2monthyear(Data$Tmax)
numyear2monthyear(DTmUn)
extrema_dates(DTmUn)
# find the index
maxIndex <- Data$Tmax %>%
unlist() %>%
as.vector() %>%
which.max()
# find the max value's index
maxIndex <- Data$Tmax %>%
unlist() %>%
as.vector() %>%
which.max()
# find sub position
subIndex <- round((maxIndex/16440)*10) # 8 - This could be district
# num to month
numyear2monthyear <- function(x){
c(trunc(x),                   # entire part = year
round((x-floor(x))*12 + 1)) # decimal part * 12 + 1 (Jan=0) = Month
}
# try test function on Data$Tmax
numyear2monthyear(Data$Tmax$Northern_Ireland)
numyear2monthyear(DTmUn)
lapply(numyear2monthyear, Data)
lapply(Data$Tmax, numyear2monthyear)
# try it with lapply
sapply(Data$Tmax, numyear2monthyear)
lapply(Data$Tmax, extrema_dates)
sapply(Data$Tmax, extrema_dates)
# yeet
extrema_dates <- function(ts){
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
list(max=max(ts),
min_year=ts_min_date[1],
min_month=ts_min_date[2],
max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2])
}
sapply(Data$Tmax, extrema_dates)
# yeet
extrema_dates <- function(ts){
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
list(max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2],
max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2])
}
sapply(Data$Tmax, extrema_dates)
sapply(Data$Tmax, extrema_dates)
# try test function on Data$Tmax
numyear2monthyear(Data$Tmax$Northern_Ireland)
numyear2monthyear(DTmUn)
# try it with lapply
lapply(Data$Tmax, numyear2monthyear)
# yeet
extrema_dates <- function(ts){
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
list(max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2],
max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2])
}
sapply(Data$Tmax, extrema_dates)
# yeet
extrema_dates <- function(ts){
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
list(max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2],
max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2])
}
# yeet
extrema_dates <- function(ts){
# yeet
extrema_dates <- function(ts){
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
list(max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2],
max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2],
month_txt=month.abb[(time(max_date)[which.max(max_date)] %% 1)*12+1]
)}
# try to use the 2 above functions
sapply(Data$Tmax, extrema_dates)
# yeet
extrema_dates <- function(ts){
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
list(max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2],
max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2],
month_txt=month.abb[(time(max_date)[which.max(max_date)] %% 1)*12+1]
)}
# yeet
extrema_dates <- function(ts){
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
list(max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2],
max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2],
month_txt=month.abb[(time(max_date)[which.max(max_date)] %% 1)*12+1]
)
}
extrema_dates(Data$Tmax$Northern_Ireland)
extrema_dates(DTmUn)
# try to use the 2 above functions
sapply(Data$Tmax, extrema_dates)
# yeet
extrema_dates <- function(ts){
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
list(max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2],
max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2],
month_txt=month.abb[(time(max_date)[which.max(max_date)] %% 1)*12+1]
)
}
# yeet
extrema_dates <- function(ts){
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
list(max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2],
max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2]
)
}
# yeet
extrema_dates <- function(ts){
ts_min_date <- numyear2monthyear(time(ts)[which.min(ts)])
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
list(min=min(ts),
min_year=ts_min_date[1],
min_month=ts_min_date[2],
max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2],
month_txt = month.abb[(time(data)[which.min(data)] %% 1)*12+1])
}
extrema_dates(Data$Tmax$Northern_Ireland)
# yeet
extrema_dates <- function(ts){
ts_min_date <- numyear2monthyear(time(ts)[which.min(ts)])
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
list(min=min(ts),
min_year=ts_min_date[1],
min_month=ts_min_date[2],
max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2])
}
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 1 - Task 1
library(magrittr)
library(tseries)
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 1 - Task 1
library(magrittr)
library(tseries)
# set address
address <- "https://www.metoffice.gov.uk/pub/data/weather/uk/climate/datasets/"
# set features
features <- c("Tmax", "Tmean", "Tmin")
# create a list of districts
districts <- c("Northern_Ireland",
"Scotland_N",
"Scotland_E",
"Scotland_W",
"England_E_and_NE",
"England_NW_and_N_Wales",
"Midlands",
"East_Anglia",
"England_SW_and_S_Wales",
"England_SE_and_Central_S")
# how many rows
nrow <- 2020-1884+1
# Time Series function
create.ts <- function(feature, district){ # pass 2 parameters
c(address, feature, "/date/", district, ".txt") %>%  # set the url with several features adding 2 text fields
paste(collapse = "") %>%  # collapse the set urls above with no space
read.table(skip = 5, header = TRUE, nrows = nrow) %>%  # read the table, skip 5 rows, add first col as headers and nrows is 2020-1884+1
subset(select = 2:13) %>%  # only select Jan - Dec
t() %>% # transpose matrix
as.vector() %>% # save it as a vector
ts(start = c(1884, 1),frequency = 12) # create a time-series object
}
# test the function
create.ts("Tmax", "Northern_Ireland")
# TMAX
Tmax.data <-
lapply(districts, create.ts, feature = "Tmax") %>%
set_names(districts)
#TMEAN
Tmean.data <-
lapply(districts, create.ts, feature = "Tmean") %>%
set_names(districts)
source('~/GitHub/mjb-msc-ds/data-mining-and-statistical-modelling/assessment-2/meeting-notes.R', echo=TRUE)
# num to month
numyear2monthyear <- function(x){
c(trunc(x),                   # entire part = year
round((x-floor(x))*12 + 1)) # decimal part * 12 + 1 (Jan=0) = Month
}
# try test function on Data$Tmax
numyear2monthyear(Data$Tmax$Northern_Ireland)
numyear2monthyear(DTmUn)
# try it with lapply
lapply(Data$Tmax, numyear2monthyear)
# yeet
extrema_dates <- function(ts){
ts_min_date <- numyear2monthyear(time(ts)[which.min(ts)])
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
list(min=min(ts),
min_year=ts_min_date[1],
min_month=ts_min_date[2],
max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2])
}
extrema_dates(Data$Tmax$Northern_Ireland)
extrema_dates(DTmUn)
# try to use the 2 above functions
sapply(Data$Tmax, extrema_dates)
DTmUn <- Data$Tmax %>%
which.max() %>%
window()
DTmUn <- Data$Tmax %>%
unlist() %>%
as.vector()
# unlist tMAX
tmax_unl <- Data$Tmax %>%
unlist() %>%
as.vector()
source('~/GitHub/mjb-msc-ds/data-mining-and-statistical-modelling/assessment-2/meeting-notes.R', echo=TRUE)
# month
maxMonth <- month.abb[(time(Data$Tmax)[which.max(Data$Tmax)] %>% 1)*12+1]
source('~/GitHub/mjb-msc-ds/data-mining-and-statistical-modelling/assessment-2/meeting-notes.R', echo=TRUE)
source('~/GitHub/mjb-msc-ds/data-mining-and-statistical-modelling/assessment-2/meeting-notes.R', echo=TRUE)
source('~/GitHub/mjb-msc-ds/data-mining-and-statistical-modelling/assessment-2/meeting-notes.R', echo=TRUE)
source('~/GitHub/mjb-msc-ds/data-mining-and-statistical-modelling/assessment-2/meeting-notes.R', echo=TRUE)
getMonth <- function(x){month.abb[time(x)]}
lapply(Data$Tmax, getMonth)
dTmax <- Data$Tmax %>%
unlist() %>%
as.vector() %>%
which.max()
# GETS MONTH
unlistedTMAX <- Data$Tmax %>% unlist()
myMm <- month.abb[(time(unlistedTMAX)[which.min(unlistedTMAX)] %% 1)*12+1]
plot(Data$Tmax$Northern_Ireland, type = 'l')
# get max temp of Tmax
lapply(Data$Tmax, which.max)
# unlist tMAX
tmax_unl <- Data$Tmax %>%
unlist() %>%
as.vector()
# get max temp of Tmax
lapply(Data$Tmax, which.max)
# get max temp of Tmax
lapply(Data$Tmax, which.max) %>% which.max()
# get max temp of Tmax
lapply(Data$Tmax, which.max)
# get max temp of Tmax
sapply(Data$Tmax, which.max)
# unlist tMAX
tmax_unl <- Data$Tmax %>%
unlist() %>%
as.vector()
# num to month
numyear2monthyear <- function(x){
c(trunc(x),                   # entire part = year
round((x-floor(x))*12 + 1)) # decimal part * 12 + 1 (Jan=0) = Month
}
# try test function on Data$Tmax
numyear2monthyear(Data$Tmax$Northern_Ireland)
numyear2monthyear(tmax_unl)
# try it with lapply
lapply(Data$Tmax, numyear2monthyear)
# yeet
extrema_dates <- function(ts){
ts_min_date <- numyear2monthyear(time(ts)[which.min(ts)])
ts_max_date <- numyear2monthyear(time(ts)[which.max(ts)])
list(min=min(ts),
min_year=ts_min_date[1],
min_month=ts_min_date[2],
max=max(ts),
max_year=ts_max_date[1],
max_month=ts_max_date[2])
}
extrema_dates(Data$Tmax$Northern_Ireland)
extrema_dates(tmax_unl)
source('~/GitHub/mjb-msc-ds/data-mining-and-statistical-modelling/assessment-2/meeting-notes.R', echo=TRUE)
source('~/GitHub/mjb-msc-ds/data-mining-and-statistical-modelling/assessment-2/meeting-notes.R', echo=TRUE)
numyear2monthyear(time(data)[which.max(data)])
numyear2monthyear(time(data)[which.min(data)])
# try to use the 2 above functions
sapply(Data$Tmax, extrema_dates)
unlistedTMAX
# GETS MONTH
unlistedTMAX <- Data$Tmax %>% unlist()
myMm <- month.abb[(time(unlistedTMAX)[which.min(unlistedTMAX)] %% 1)*12+1]
myMm
