library(magrittr)
# generate white noise
set.seed(20210113)
(wn <- rnorm(100, sd = 10))
wn %>% plot(type = 'l')
# generate time vector
t <- 1:length(wn)
# linear trend
linear <- 2 + 3*t
linear.wn <- linear + wn
linear.wn %>% plot(type = 'l')
linear %>% lines(col = "red")
# quadratic trend
quadratic <- 25 - t + 0.01 * t^2
quadratic.wn <- quadratic + wn
quadratic.wn %>% plot(type = 'l')
quadratic %>% lines(col = "red")
# cubic trend
cubic <- - 7.55755 + 8.78074 * t - 0.224666 * t^2 + 0.00147614 * t^3
cubic.wn <- cubic + wn
cubic.wn %>% plot(type = 'l')
cubic %>% lines(col = "red")
# ------------------------------
# Average Atlanta Temperature
# ------------------------------
data <- read.table("data/AvTempAtlanta.txt", header = TRUE)
data %>% head()
data[,2:13] %>% head()
data[,-c(1,14)] %>% head()
temp <- as.vector(t(data[,-c(1,14)]))
data[,-c(1,14)] %>%
t() %>%
as.vector() -> temp
# plot the time series
temp %>% plot(type = 'l', ylab = "Average Atlanta Temperature")
temp[1:12] %>% plot(type = 'l', ylab = "Average Atlanta Temperature")
temp <- (temp - 32) * 5/9
temp %>% plot(type = 'l', ylab = "Average Atlanta Temperature")
# let's create a time series objoect
temp <- ts(temp, start = 1879, frequency = 12)
temp %>% ts(start = 1879, frequency = 12) -> temp
temp %>% plot()
temp %>% plot()
# mean
(avg <- mean(temp))
# time vector
time <- 1:length(temp)
time
# estimate linear trend
linear.fit <- lm(temp ~ time)
summary(linear.fit)
# time vector
time <- 1:length(temp)
# estimate linear trend
linear.fit <- lm(temp ~ time)
summary(linear.fit)
# time vector rescaled (0 first obs, 1 is the last)
time <- 1:length(temp)
time <- (time - min(time))/(max(time) - 1)
linear.fit <- lm(temp ~ time)
summary(linear.fit)
# time vector rescaled (0 first obs, 1 is the last)
time <- 1:length(temp)
time <- time/12
linear.fit <- lm(temp ~ time)
summary(linear.fit)
ts.plot(temp, ylab = "Temperature")
temp[1:12] %>% plot(type = 'l', ylab = "Average Atlanta Temperature")
temp <- (temp - 32) * 5/9
temp %>% plot(type = 'l', ylab = "Average Atlanta Temperature")
# let's create a time series objoect
temp <- ts(temp, start = 1879, frequency = 12)
temp %>% ts(start = 1879, frequency = 12) -> temp
temp %>% plot()
source('~/GitHub/mjb-msc-ds/data-mining-and-statistical-modelling/week-5/example-1.R', echo=TRUE)
globaltemps
plot(NULL,
main = "Gloabal temperature deviations",
ylab = "Deviations",
xlab = "Year",
type = "l",
xlim = c(1,142), #c(1856,1998),
ylim = c(-0.55,0.55)
)
globaltemps %>% lines()
# plot a horizontal line
# b_t = beta_0 + beta_1 * t
# beta_0 = mean temp
# beta_1 = 0 (horizontal)
abline(mean(globaltemps), # intercept
0,                # slope
col = 'red',      # colour
lwd = 3)          # line width
# estimate linear trend
# m_t = beta_0 + beta_1 * t
# our test is to estimate beta_0 and beta_1
time <- 1:length(globaltemps)
c("globaltemps","poly(time, 1, raw = T)") %>%
paste(collapse = " ~ ") %>%
as.formula() %>%
lm() -> linear.model
c("globaltemps","poly(time, 1, raw = T)") %>%
paste(collapse = " ~ ") %>%
as.formula() %>%
lm() -> linear.model
linear.model %>% coefficients()
