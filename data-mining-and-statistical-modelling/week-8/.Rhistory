source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/AtlantaCompleteModel.R', echo=TRUE)
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/AtlantaCompleteModel.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
TIME <- seq(from = 1994, by = 1/12, length = length(data))
TIME
TIME <- seq(from = 1994, by = 12, length = length(data))
TIME
TIME <- seq(from = 1994, by = 12, length = length(milk))
plot(TIME,
milk,
type = 'b')
plot(TIME,
milk,
type = 'l')
# linear model is best for milk
linear <- lm(milk ~ .,
data = data.frame(TIME = poly(TIME, degree = 1, raw = TRUE)))
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/tutorial.R', echo=TRUE)
lines(TIME,
linear %>% fitted(),
)
plot(TIME,
milk,
type = 'l')
lines(TIME,
linear %>% fitted(),
)
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/tutorial.R', echo=TRUE)
# seasonality ----------------------------------------------------------
data.notrend <- milk - linear %>% fitted()
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/tutorial.R', echo=TRUE)
rm(data.notrend)
lines(TIME,
milk.notrend
col = 'red',
lwd = 3
)
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/tutorial.R', echo=TRUE)
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/tutorial.R', echo=TRUE)
# seasonality component
SIN <- COS <- matrix(nrow = length(TIME), ncol=6)
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/tutorial.R', echo=TRUE)
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/tutorial.R', echo=TRUE)
rm(lwd)
# trend ---------------------------------------------------------------
TIME <- seq(from = 1994, by = 12, length = length(milk))
plot(TIME,
milk,
type = 'l')
# linear model is best for milk
linear <- lm(milk ~ .,
data = data.frame(TIME = poly(TIME, degree = 1, raw = TRUE)))
plot(TIME,
milk,
type = 'l')
lines(TIME,
linear %>% fitted(),
col = 'red',
lwd = 3
)
# seasonality ----------------------------------------------------------
# get time series with no trend
milk.notrend <- milk - linear %>% fitted()
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/tutorial.R', echo=TRUE)
lines(TIME,
har6 %>%fitted(),
col = 'red',
lwd = 2)
plot(TIME,
milk.notrend,
type = 'l')
lines(TIME,
har6 %>%fitted(),
col = 'red',
lwd = 2)
har6 <- lm(milk.notrend ~ . - 1,
data = data.frame(SIN = SIN[,1:6],
cos = COS[,1:6]))
summary(har6)
# seasonality component
SIN <- COS <- matrix(nrow = length(TIME), ncol=6)
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/tutorial.R', echo=TRUE)
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/tutorial.R', echo=TRUE)
View(COS)
View(SIN)
# seasonality component
SIN <- COS <- matrix(nrow = length(TIME), ncol = 6)
# create sin and cos
for(i in 1:6){
# calculate i for the sine
SIN[,i] <- sin(2 * pi * i * TIME)
# calculate i for the cos
COS[,i] <- cos(2 * pi * i * TIME)
}
# trend ---------------------------------------------------------------
TIME <- seq(from = 1994, by = 1/12, length = length(data))
TIME
# trend ---------------------------------------------------------------
TIME <- seq(from = 1994, by = 12, length = length(data))
TIME
# trend ---------------------------------------------------------------
TIME <- seq(from = 1994, by = 12, length = length(milk))
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/tutorial.R', echo=TRUE)
# seasonality ----------------------------------------------------------
# get time series with no trend
milk.notrend <- milk - linear %>% fitted()
data.notrend <- data - trend %>% fitted()
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/tutorial.R', echo=TRUE)
milk.residuals <- milk - combined %>% fitted()
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/tutorial.R', echo=TRUE)
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/back.R', echo=TRUE)
3^3
3^2
3*3*3
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/back.R', echo=TRUE)
p <- (1:norder) - 1
q <- (1:norder) - 1
norder
norder
norder <- 4
p <- (1:norder) - 1
q <- (1:norder) - 1
p
q
p <- 1:norder - 1
q <- 1:norder - 1
p
q
aic <- matrix(0, nrow = norder, ncol = norder)
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/back.R', echo=TRUE)
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/back.R', echo=TRUE)
View(aic)
install.packages(c("install.packages("formatR"", "repos", "=", ""http://cran.rstudio.com")"))
install.packages("formatR", repos = "http://cran.rstudio.com")
library(formatR)
sessionInfo()
tidy_source(width.cutoff = 50)
tidy_source(width.cutoff = 50)
tidy_source(width.cutoff = 50)
ls
cd
library(formatR)
library(formatR)
tidy_eval()
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/back.R', echo=TRUE)
#look for the lowest coefficients
# the which function is going to go useful for max and minimum for CW
index <- which(aic == min(aic), arr.ind = TRUE)
p.choice <- index[1,1] - 1
q.choice <- index[1,2] - 1
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/back.R', echo=TRUE)
residuals.model
residuals.model <- arima(milk.residuals,
order = c(p.choice, 0, q.choice),
include.mean = FALSE,
method = 'ML')
summary(linear)
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/back.R', echo=TRUE)
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/back.R', echo=TRUE)
#look for the lowest coefficients
# the which function is going to go useful for max and minimum for CW
index <- which(aic == min(aic), arr.ind = TRUE)
p.choice <- index[1,1] - 1
q.choice <- index[1,2] - 1
# Predictions.
ahead <- 12
TIME.NEW <- seq(from = 2006, by = 1/12, length = ahead)
SIN.NEW <- COS.NEW <- matrix(nrow = length(TIME.NEW), ncol = 6)
for(i in 1:6){
SIN.NEW[, i] <- sin(2 * pi * i * TIME.NEW)
COS.NEW[, i] <- cos(2 * pi * i * TIME.NEW)
}
pred.comb <- combined %>%
predict(newdata = data.frame(TIME = poly(TIME.NEW, degree = 1, raw = TRUE),
SIN = SIN.NEW[, 1:5],
COS = COS.NEW[, 1:6]))
pred.res <- predict(residuals.model, n.ahead = ahead)$pred
plot(TIME,
data,
type = 'l',
xlim = c(1994,2007))
lines(TIME.NEW,
pred.comb + pred.res,
col = 'red',
lwd = 2)
pred.comb <- combined %>%
predict(newdata = data.frame(TIME = poly(TIME.NEW, degree = 1, raw = TRUE),
SIN = SIN.NEW[, 1:5],
COS = COS.NEW[, 1:6]))
pred.comb <- combined
pred.comb <- combined %>%
predict(newdata = data.frame(TIME = poly(TIME.NEW, degree = 1, raw = TRUE),
SIN = SIN.NEW[, 1:5],
COS = COS.NEW[, 1:6]))
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/back.R', echo=TRUE)
pred.res <- predict(residuals.model, n.ahead = ahead)$pred
plot(TIME,
milk,
type = 'l',
xlim = c(1994,2007))
lines(TIME.NEW,
pred.comb + pred.res,
col = 'red',
lwd = 2)
View(combined)
pred.comb <- combined %>%
predict(newdata = data.frame(TIME = poly(TIME.NEW, degree = 1, raw = TRUE),
SIN = SIN.NEW[, 1:5],
COS = COS.NEW[, 1:6]))
pred.comb
combined
pred.res <- predict(residuals.model, n.ahead = ahead)$pred
plot(TIME,
milk,
type = 'l',
xlim = c(1994,2007))
lines(TIME.NEW,
pred.comb + pred.res,
col = 'red',
lwd = 2)
ahead
# Predictions.
ahead <- 12
TIME.NEW <- seq(from = 2006, by = 1/12, length = ahead)
SIN.NEW <- COS.NEW <- matrix(nrow = length(TIME.NEW), ncol = 6)
TIME.NEW
SIN.NEW
SIN.NEW <- COS.NEW <- matrix(nrow = length(TIME.NEW), ncol = 6)
SIN.NEW
TIME.NEW
for(i in 1:6){
SIN.NEW[, i] <- sin(2 * pi * i * TIME.NEW)
COS.NEW[, i] <- cos(2 * pi * i * TIME.NEW)
}
SIN.NEW
pred.comb <- combined %>%
predict(newdata = data.frame(TIME = poly(TIME.NEW, degree = 1, raw = TRUE),
SIN = SIN.NEW[, 1:5],
COS = COS.NEW[, 1:6]))
TIME.NEW <- seq(from = 2006, by = 1/12, length = ahead)
SIN.NEW <- COS.NEW <- matrix(nrow = length(TIME.NEW), ncol = 6)
for(i in 1:6){
SIN.NEW[, i] <- SIN(2 * pi * i * TIME.NEW)
COS.NEW[, i] <- COS(2 * pi * i * TIME.NEW)
}
source('~/OneDrive/documents/uni/data-mining-and-statistical-modelling/week-8/back.R', echo=TRUE)
predict(residuals.model, n.ahead = ahead)
pred.res <- predict(residuals.model, n.ahead = ahead)$pred
pred.res
library(magrittr)
# LOAD DATA ----
#data <- read.table(file.choose(), header = TRUE)
data <- read.table("AvTempAtlanta.txt", header = TRUE)
# LOAD DATA ----
#data <- read.table(file.choose(), header = TRUE)
data <- read.table("AvTempAtlanta.txt", header = TRUE)
View(data)
data[, -c(1, 14)] %>% t() %>% as.vector() -> data
data <- (data - 32) * 5/9
data <- ts(data, start = 1879, frequency = 12)
# TREND MODEL
TIME <- seq(from = 1879, by = 1/12, length = length(data))
trend <- lm(data ~ ., data.frame(TIME = poly(TIME, degree = 1, raw = TRUE)))
plot(TIME,
data,
type = 'l')
lines(TIME,
trend %>% fitted(),
col = 'red',
lwd = 2)
head(data)
# LOAD DATA ----
#data <- read.table(file.choose(), header = TRUE)
data <- read.table("AvTempAtlanta.txt", header = TRUE)
View(data)
