area
source('~/.active-rstudio-document', echo=TRUE)
x <- rnorm(5)
source('~/.active-rstudio-document', echo=TRUE)
print(x)
print(y)
source('~/.active-rstudio-document', echo=TRUE)
drawn_suits <- c("hearts","spades","diamonds","clubs")
length(drawn_suits)
drawn_suits <- c("hearts","spades","diamonds","diamonds","spades")
length(drawn_suits)
length(area)
is.vector(area)
remain <- c(11,12,11,13)
source('~/.active-rstudio-document', echo=TRUE)
names(remain) <- suits
remain
remain
remainn <- c(spades=11, hearts=12, diamonds=11,clubs=13)
print(remain)
creditScore <- read.csv("credit-score.csv")
creditScore
View(creditScore)
creditScore <- read.csv("data/credit-score.csv")
creditScore
head(creditScore)
View(creditScore)
summary(creditScore)
summary(creditScore)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
install.packages("LaTeX")
library(tinytex)
#Read in the data
Data <- read.csv("data/credit-score.csv")
remove(creditScore)
#Produce Summary Statistics of the data
summary(Data)
#Produce Summary Statistics of the data
summary(Data)
#Produce Histograms and Density Plots for all variables
hist(Data$Age)
#Produce Histograms and Density Plots for all variables
hist(Data$No_30_59_DaysPast)
#Produce Histograms and Density Plots for all variables
hist(Data$Monthly_Income)
#You must call in the packages you wish to use for a given session.
library(FSelector) # Feature selection: information.gain().
library(dplyr) # Data wrangling, glimpse() and tbl_df().
library(ggpubr)
library(ggplot2) # Visualise data.
library(lubridate) # Dates and time.
library(rattle) # weatherAUS data and normVarNames().
library(readr) # Efficient reading of CSV data.
library(scales) # Format comma().
library(stringi) # String concat operator %s+%.
library(stringr) # String operations.
library(tibble) # Convert row names into a column.
library(tidyr) # Prepare a tidy dataset, gather().
library(magrittr) # Pipes %>%, %T>% and equals(), extract().
#Produce Histograms and Density Plots for all variables
hist(Data$Debt_Ratio)
#Using the density plots/ histograms, as well as the sum() function when needed, determine suitable cut off points for outliers
sum(Data$Debt_Ratio > 100)
sum(Data$Debt_Ratio > 100) / sum(Data$Data_Debt)
sum(Data$Debt_Ratio > 100) / 150000
#To write notes within the grey code space, a hashtag must be used.
#In order to add code click the insert, and then R.
#To execute code, you must press the play button on the top right of the grey space.
#Another note, all code before the part you're trying to exectue  must have also been executed. If you have done this the "Run all above Chunks" button next to the play button will do this quickly
sum(Data$Debt_Ratio > 100) / sum(Data$Debt_Ratio)
#Using the density plots/ histograms, as well as the sum() function when needed, determine suitable cut off points for outliers
sum(Data$Debt_Ratio > 100) / 150000
#Create a seperate version of the data, DataF1, which consists of the Data filtered to removed outliers and missing values
DataF1 <- dplyr::filter(
Data, Balance_Unsecured_Lines < 5,
Age >= 18,
Age <= 90,
No_30_59_DaysPast < 10,
No_60_89_DaysPast < 10,
No_90_DaysLate < 10,
No_Dependents >= 0,
No_Dependents <= 10,
Debt_Ratio < 10,
Monthly_Income > 0,
No_OpenLines < 20
)
#Box Plots after filtering. Comparision box plots between the Serious_2yrs variable. identifying significant variables
SeriousYesF1 <- dplyr::filter(DataF1, Serious_2yrs == 1)
SeriousNoF1 <- dplyr::filter(DataF1, Serious_2yrs == 0)
boxplot(SeriousYesF1$Age, SeriousNoF1$Age)
# Box plot comparisions, can set ylim and xlim in the form of xlim = c(min,max)
boxplot(SeriousYesF1$Debt_Ratio, SeriousNoF1$Debt_Ratio)
#Test for Normality within the Data
#pnorm is the equation for the normal curve
ks.test(DataF1$Age, pnorm)
#Conduct a Binary Logistic Regression (using the two variables you deem most important)
model1 <- glm(Serious_2yrs ~ Age + No_90_DaysLate,
data =  DataF1,
family = binomial)
View(model1)
print(2.2 X 10 ^ -16)
print(2.2 * 10 ^ -16)
#Conduct a Binary Logistic Regression (using the two variables you deem most important)
model1 <- glm(Serious_2yrs ~ Age + No_90_DaysLate,
data =  DataF1,
family = binomial)
# make predictions
predictions <- predict(model1, type = "response")
predictions
# make predictions
predictions <- predict(model1, type = "response")
# predictions
# a tool to help in the choice of the threshold
# the ROC curve
#install.packages("ROCR")
library(ROCR)
# a tool to help in the choice of the threshold
# the ROC curve
install.packages("ROCR")
# prediction function
ROCRpred <- prediction(predictions, DataF1$Serious_2yrs)
# prediction function
ROCRpred <- predictions(predictions, DataF1$Serious_2yrs)
ROCRperf <- performance(ROCRpred, "tpr", "fpr")
